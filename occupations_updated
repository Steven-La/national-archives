---
title: "National Archives"
author: "Ayisha Beauge"
date: "2025-07-16"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r}
#| label: library

library(dplyr)
library(tidyverse)
library(stringr)
library(readxl)


```


```{r}
#| label: read-excel
occupations <- read_excel("/Users/sanjanajohn/Downloads/Occupations.xlsx")

#/Users/sanjanajohn/Downloads/Occupations.xlsx

```


```{r}
#| label: category-map
#| 
category_map <- list(
  "Domestic & Personal Service" = c(
    "servant", "butler", "page", "groom", "launderer", "scullion", "nurse", "kitchen boy",
    "usher", "tapster", "messenger", "yeoman", "gentlewoman", "gentleman usher",
    "yeoman of the chamber", "yeoman of the crown", "innholder", "cook", "beerman", 
    "hosteler", "servingman", "garcon", "taverner", "beerseller", "beermaker", "boy", 
    "chamberlain", "custodian", "diaperman", "esquire of the body", "esquire of the household", 
    "keeper", "reader", "victualler", "wine drawer"
  ),
  "Manual Workers" = c(
    "labourer", "miller", "ploughman", "collier", "farmer", "gardener", "shepherd", "miner",
    "loader", "carter", "thresher", "herder", "lighterman", "keelman", "wainman",
    "miller servingman", "fowler", "slaughterman", "quarrier", "raffman", "workman",
    "swineherd", "wheeler", "shearman", "hellier", "roughmason", "pavier", "apprentice", "porter",
    "journeyman", "barrowman", "bedeman", "carrier", "drayman", "dyker", "sayer", "cosser",
    "collector", "colemeter", "water bearer", "millward"
  ),
  "Merchants & Traders" = c(
    "merchant", "broker", "factor", "draper", "stationer", "chapman", "trader", "vintner",
    "fishmonger", "grocer", "ironmonger", "leather seller", "pedder", "vine setter",
    "merchant's clerk", "haberdasher", "hardwareman", "mercer", "moneyer", "fruiterer", 
    "purser", "chandler", "clothes dealer", "huckster", "horse dealer", "spicer"
  ),
  "Religious Orders" = c(
    "chaplain", "priest", "vicar", "monk", "rector", "preacher", "parish", "bishop", "friar",
    "chantry", "pardoner", "summoner", "precentor", "preceptor", "serving priest",
    "king's chaplain", "papal collector", "papal nuncio", "parson", "vagabond", "prior", "brother"
  ),
  "Nonworking" = c(
    "beggar", "student", "scholar", "prisoner", "lodger"
  ),
  "Craftsmen & Artisans" = c(
    "tailor", "weaver", "cordwainer", "shoemaker", "smith", "goldsmith", "carpenter",
    "painter", "glazier", "mason", "hatmaker", "embroiderer", "dyer", "tanner", "currier",
    "saddler", "fisherman", "clockmaker", "joiner", "cutler", "potter", "sculptor", "lapidary",
    "lastmaker", "parchment maker", "tilemaker", "soapmaker", "skepmaker", "instrument maker",
    "silk raiser", "silkwoman", "shuttlemaker", "slater", "spurrier", "swordmaker",
    "tent maker", "stringer", "pinmaker", "pommel maker", "grinder", "jerkin maker",
    "gold drawer", "goldwiredrawer", "ribbonmaker", "ropemaker", "roper", "shearing grinder",
    "ploughmaker", "wool packer", "wool spinner", "woollen weaver", "free mason",
    "king's glazier", "king's goldsmith", "pie baker", "baker", "upholsterer", "woodmaker",
    "wool card maker", "furrier", "founder", "souter", "cobbler", "capper",
    "skinner", "brewer", "beerbrewer", "barber", "cooper", "sawyer", "armourer", "basketmaker",
    "botcher", "carver", "hosier", "pattenmaker", "tiler", "tinker", "webster", "cap-thicker",
    "capmaker", "clothmaker", "clothworker", "fuller", "glover", "hatter", "pinner", "pouchmaker",
    "pursemaker", "saltpetre-maker", "stainer", "tawyer", "tucker", "worker of wools and cloths",
    "arras maker", "bookprinter", "button maker", "comb maker", "craftsman", "finer", "hooper",
    "jeweller", "lockyer", "organmaker", "pointmaker", "artificer", "balance maker", "barker",
    "bellows maker", "bitmaker", "blacksmith", "bowyer", "bracemaker", "brazier", "bricklayer",
    "brickmaker", "brickman", "brigandine maker", "burners", "cannon maker", "cap dresser",
    "cap worker", "cardmaker", "chaloner", "clapboard maker", "clogmaker", "combset maker",
    "counterpoint maker", "crossbow maker", "dauber", "dialmaker",
    "doubletmaker", "draper", "engraver", "failles maker", "furber", "girdler", "goldbeater",
    "gunmaker", "hammer maker", "hokyer", "jackmaker", "leather drier", "lime-burner", "limner",
    "mill picker", "netmaker", "oilmaker", "pewterer", "plateman", "printer", "quilter",
    "rowlyer", "sheather", "spinner", "spooner", "stoneslipper", "stole maker",
    "taboret", "thatcher", "tinner", "tipper", "turner", "weterman", "wiredrawer",
    "wool comber", "whitetawyer", "wright", "woader", "bookbinder"
  ),
  "Legal & Clerical" = c(
    "clerk", "attorney", "scribe", "secretary", "notary", "proctor", "lawyer",
    "holy water clerk", "prothonotary", "king's latin secretary", "writer", "prebendary", "scrivener",
    "canon", "curate", "pastor", "archdeacon", "bachelor in laws", "cardinal", "celebrant",
    "confessor", "doctor of both laws", "doctor of decrees", "doctor of law"
  ),
  "Medical" = c(
    "surgeon", "physician", "apothecary", "king's physician", "doctor of medicine", "leech",
    "doctor", "master in medicine"
  ),
  "Military & Security" = c(
    "soldier", "gaoler", "serjeant at arms", "serjeant of the king's trumpeters", "post",
    "king's post or runner", "hackneyman"
  ),
  "Agriculture" = c(
    "husbandman", "butcher"
  ),
  "Maritime & Transportation" = c(
    "mariner", "shipper", "shipman", "shipmaster", "waterman", "seaman", "shipwright", "boatman",
    "carrier", "drayman", "ferryman", "sailor", "shipowner"
  ),
  "Performers, Artists, & Intellectuals" = c(
    "fiddler", "piper", "poet", "orator", "sculptor", "portrayer", "master of arts",
    "minstrel", "musician", "schoolmaster", "teacher", "drummer", "king's trumpeter", "professor"
  ),
  "Other" = c(
    "corviser", "king's esquire", "king's glazier", "king's goldsmith", "kempster", "pannierman",
    "gunner", "hokyer", "rowlyer", "weterman"
  )
)
```



```{r}
occupations <- occupations %>%
  mutate(
    category = case_when(
      str_detect(tolower(term), str_c(category_map[["Domestic & Personal Service"]], collapse = "|")) ~ "Domestic & Personal Service",
      str_detect(tolower(term), str_c(category_map[["Manual Workers"]], collapse = "|")) ~ "Manual Workers",
      str_detect(tolower(term), str_c(category_map[["Merchants & Traders"]], collapse = "|")) ~ "Merchants & Traders",
      str_detect(tolower(term), str_c(category_map[["Religious Orders"]], collapse = "|")) ~ "Religious Orders",
      str_detect(tolower(term), str_c(category_map[["Nonworking"]], collapse = "|")) ~ "Nonworking",
      str_detect(tolower(term), str_c(category_map[["Craftsmen & Artisans"]], collapse = "|")) ~ "Craftsmen & Artisans",
      str_detect(tolower(term), str_c(category_map[["Legal & Clerical"]], collapse = "|")) ~ "Legal & Clerical",
      str_detect(tolower(term), str_c(category_map[["Medical"]], collapse = "|")) ~ "Medical",
      str_detect(tolower(term), str_c(category_map[["Military & Security"]], collapse = "|")) ~ "Military & Security",
      str_detect(tolower(term), str_c(category_map[["Agriculture"]], collapse = "|")) ~ "Agriculture",
      str_detect(tolower(term), str_c(category_map[["Maritime & Transportation"]], collapse = "|")) ~ "Maritime & Transportation",
      str_detect(tolower(term), str_c(category_map[["Performers, Artists, & Intellectuals"]], collapse = "|")) ~ "Performers, Artists, & Intellectuals",
      str_detect(tolower(term), str_c(category_map[["Other"]], collapse = "|")) ~ "Other",
      TRUE ~ "Uncategorized"
    )
  )

```




```{r}
#| label: big-data-base
england_immagrant <- read_excel("/Users/sanjanajohn/Downloads/englands_immigrants_cleaned.xlsx")
```

```{r}

#Renaming occupation from the atafram occupation from "term" to "occupatioon"
  
occupations <- occupations %>%
  rename(occupations = term)
```

```{R}
##Merging the data 
england_immagrant <- merge(occupations, england_immagrant, by = "occupations")

```

```{r}
##Deleting unnecessary colums 

# Remove specific columns by name
england_immagrant <- subset(england_immagrant, select = -c(forename_standard, particle, surname_standard, suffix, householder, person_notes, biographical_notes, aliases, social_statuses, archive, reference, part ))


```



```{r} 
#| label: changing-date
# Adding year only into the dataframe
england_immagrant$document_year <- format(as.Date(england_immagrant$document_start_date), "%Y")
```


```{r}
#| label: merging-places

england_immagrant <- england_immagrant %>%
  mutate(origin_regions = coalesce(origin_region_standard, origin_region))



england_immagrant <- england_immagrant %>%
  mutate(origin_towns = coalesce(origin_town_standard, origin_town))
```


```{r}
#| label: removing-standard
## Dropping the Region/town with the standards 
 england_immagrant <- subset(england_immagrant, select = -c(origin_region_standard, origin_region, origin_town_standard, origin_town, document_start_date))



```
